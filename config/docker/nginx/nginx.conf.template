worker_processes $WORKER_PROCESSES;
error_log /var/log/nginx/error.log warn;
events {
  worker_connections $WORKER_CONNECTIONS;
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format access-log escape=json '{'
        '"@timestamp": "$time_iso8601",'
        '"log.logger": "access",'
        '"log.level": "INFO",'
        '"message": "ACCESS_INFO",'
        '"labels.category": "ACC",'
        '"trace.id": "$http_X_B3_Traceid",'
        '"parent.id": "$http_X_B3_Parentspanid",'
        '"client.ip": "$remote_addr",'
        '"user_agent.original": "$http_user_agent",'
        '"url.path": "$request_uri",'
        '"http.request.method": "$request_method",'
        '"http.request.length": "$request_length",'
        '"http.request.referrer": "$http_referer",'
        '"http.request.Time": "$request_time",'
        '"http.response.status_code": "$status",'
        '"http.response.bytes": "$bytes_sent",'
        '"http.response.body.bytes": "$body_bytes_sent",'
        '"nginx.upstream.addr": "$upstream_addr",'
        '"nginx.upstream.status": "$upstream_status",'
        '"nginx.upstream.response_time": "$upstream_response_time",'
        '"nginx.upstream.connect_time": "$upstream_connect_time",'
        '"nginx.upstream.header_time": "$upstream_header_time"'
        '}';

    access_log /var/log/nginx/access.log access-log;

    # don't send the nginx version number in error pages and Server header
    server_tokens off;
    add_header X-Frame-Options sameorigin;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    # Content Security Policy (CSP)
    add_header Content-Security-Policy "default-src 'self' https://ui5.sap.com/; script-src 'self' 'unsafe-inline'; style-src https://ui5.sap.com/ 'unsafe-inline'; font-src https://ui5.sap.com/; img-src 'self'; frame-src 'self'; object-src 'none'";
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    client_header_timeout $CLIENT_HEADER_TIMEOUT;
    client_body_timeout $CLIENT_BODY_TIMEOUT;
    send_timeout $SEND_TIMEOUT;
    client_header_buffer_size $CLIENT_HEADER_BUFFER_SIZE;
    large_client_header_buffers $LARGE_CLIENT_HEADER_BUFFERS;

    sendfile on;
    keepalive_timeout $KEEPALIVE_TIMEOUT;
    gzip on;
    charset UTF-8;
    index index.html index.htm;
    server {
        listen 8080;
        server_name localhost;

        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

        root /usr/share/nginx/html;
        location ~ ^(.*)\/@APPLICATION_ID@\/(?!api)(.*)$ {
            rewrite ^(.*)\/@APPLICATION_ID@\/(?!api)(.*)$ /$2;
            add_header Cache-Control no-cache;
            expires 0;
            try_files /$2 /$2/ /index.html =404;
            break;
        }
        location ~ ^(.*)\/@APPLICATION_ID@\/api(.*)$ {
            proxy_cookie_path ~*^/.* /;
            proxy_set_header api-base-url $1/@APPLICATION_ID@/api;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
            proxy_read_timeout 90;
            client_max_body_size $CLIENT_MAX_BODY_SIZE;
            client_body_buffer_size $CLIENT_BODY_BUFFER_SIZE;
            proxy_pass ${BACKEND_SERVICE}$2$is_args$args;
            proxy_http_version 1.1;
            break;
        }
        location / {
            add_header Cache-Control no-cache;
            expires 0;
            try_files $uri $uri/ /index.html =404;
        }
        location /api/ {
            proxy_cookie_path ~*^/.* /;
            proxy_set_header api-base-url /api;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
            proxy_read_timeout 90;
            client_max_body_size $CLIENT_MAX_BODY_SIZE;
            client_body_buffer_size $CLIENT_BODY_BUFFER_SIZE;
            proxy_pass ${BACKEND_SERVICE}/;
            proxy_http_version 1.1;
        }
        location /health {
            return 200 'alive';
            add_header Content-Type text/plain;
        }
    }

}
